package com.assist.server
{

    public class StudyStuntType extends Object
    {
        private static var StudyStunt:Array = [[1, 1, 3000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1000], [1, 2, 3000, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1000], [1, 3, 3000, 0, 30, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1000], [1, 4, 3000, 0, 30, 0, 0, 2, 0, 0, 2, 0, 0, 0, 1000], [1, 5, 3000, 0, 30, 30, 0, 2, 0, 0, 2, 0, 0, 0, 1000], [1, 6, 3000, 0, 30, 30, 0, 2, 2, 0, 2, 0, 0, 0, 1000], [1, 7, 3000, 0, 30, 30, 0, 2, 2, 2, 2, 0, 0, 0, 1000], [1, 8, 3000, 0, 30, 30, 30, 2, 2, 2, 2, 0, 0, 0, 1000], [1, 9, 3000, 0, 30, 30, 30, 2, 2, 2, 2, 2, 0, 0, 1000], [2, 1, 3000, 0, 30, 30, 30, 2, 4, 2, 2, 2, 0, 0, 2000], [2, 2, 3000, 0, 60, 30, 30, 2, 4, 2, 2, 2, 0, 0, 2000], [2, 3, 3000, 0, 60, 30, 30, 2, 4, 4, 2, 2, 0, 0, 2000], [2, 4, 3000, 0, 60, 30, 60, 2, 4, 4, 2, 2, 0, 0, 2000], [2, 5, 3000, 0, 60, 30, 60, 4, 4, 4, 2, 2, 0, 0, 2000], [2, 6, 6000, 0, 60, 30, 60, 4, 4, 4, 2, 2, 0, 0, 2000], [2, 7, 6000, 0, 60, 60, 60, 4, 4, 4, 2, 2, 0, 0, 2000], [2, 8, 6000, 0, 60, 60, 60, 4, 4, 4, 2, 4, 0, 0, 2000], [2, 9, 6000, 0, 60, 60, 60, 4, 4, 4, 4, 4, 0, 0, 2000], [3, 1, 6000, 0, 60, 60, 60, 4, 4, 4, 4, 4, 2, 0, 3000], [3, 2, 6000, 0, 60, 90, 60, 4, 4, 4, 4, 4, 2, 0, 3000], [3, 3, 6000, 0, 60, 90, 60, 6, 4, 4, 4, 4, 2, 0, 3000], [3, 4, 6000, 0, 60, 90, 60, 6, 6, 4, 4, 4, 2, 0, 3000], [3, 5, 6000, 0, 60, 90, 60, 6, 6, 4, 4, 6, 2, 0, 3000], [3, 6, 6000, 0, 60, 90, 90, 6, 6, 4, 4, 6, 2, 0, 3000], [3, 7, 6000, 0, 90, 90, 90, 6, 6, 4, 4, 6, 2, 0, 3000], [3, 8, 6000, 0, 90, 90, 90, 6, 6, 6, 4, 6, 2, 0, 3000], [3, 9, 6000, 0, 90, 90, 90, 6, 6, 6, 4, 6, 2, 2, 3000], [4, 1, 6000, 0, 120, 90, 90, 6, 6, 6, 4, 6, 2, 2, 4000], [4, 2, 6000, 0, 120, 90, 90, 6, 6, 6, 4, 6, 2, 4, 4000], [4, 3, 6000, 0, 120, 90, 120, 6, 6, 6, 4, 6, 2, 4, 4000], [4, 4, 6000, 0, 120, 90, 120, 8, 6, 6, 4, 6, 2, 4, 4000], [4, 5, 6000, 0, 120, 90, 120, 8, 8, 6, 4, 6, 2, 4, 4000], [4, 6, 6000, 0, 120, 90, 120, 8, 8, 8, 4, 6, 2, 4, 4000], [4, 7, 6000, 0, 120, 90, 120, 8, 8, 8, 6, 6, 2, 4, 4000], [4, 8, 6000, 0, 120, 90, 120, 8, 8, 8, 6, 6, 4, 4, 4000], [4, 9, 6000, 0, 120, 120, 120, 8, 8, 8, 6, 6, 4, 4, 4000], [5, 1, 6000, 0, 120, 120, 120, 8, 8, 10, 6, 6, 4, 4, 5000], [5, 2, 6000, 0, 120, 120, 120, 8, 8, 10, 6, 8, 4, 4, 5000], [5, 3, 6000, 0, 120, 120, 120, 10, 8, 10, 6, 8, 4, 4, 5000], [5, 4, 6000, 0, 120, 120, 120, 10, 10, 10, 6, 8, 4, 4, 5000], [5, 5, 6000, 0, 120, 120, 120, 10, 10, 10, 8, 8, 4, 4, 5000], [5, 6, 6000, 0, 120, 120, 120, 10, 10, 10, 8, 8, 4, 6, 5000], [5, 7, 6000, 0, 120, 120, 120, 10, 10, 10, 8, 8, 6, 6, 5000], [5, 8, 6000, 0, 120, 150, 120, 10, 10, 10, 8, 8, 6, 6, 5000], [5, 9, 6000, 0, 120, 150, 150, 10, 10, 10, 8, 8, 6, 6, 5000], [6, 1, 9000, 0, 120, 150, 150, 10, 10, 10, 8, 8, 6, 6, 6000], [6, 2, 9000, 0, 120, 150, 150, 10, 10, 10, 8, 8, 6, 8, 6000], [6, 3, 9000, 0, 120, 180, 150, 10, 10, 10, 8, 8, 6, 8, 6000], [6, 4, 9000, 0, 120, 180, 150, 10, 10, 12, 8, 8, 6, 8, 6000], [6, 5, 9000, 0, 120, 180, 150, 10, 10, 12, 10, 8, 6, 8, 6000], [6, 6, 9000, 0, 120, 180, 150, 10, 10, 12, 10, 10, 6, 8, 6000], [6, 7, 9000, 0, 120, 180, 180, 10, 10, 12, 10, 10, 6, 8, 6000], [6, 8, 9000, 0, 120, 180, 180, 10, 10, 12, 10, 10, 8, 8, 6000], [6, 9, 9000, 0, 150, 180, 180, 10, 10, 12, 10, 10, 8, 8, 6000], [7, 1, 9000, 0, 150, 180, 180, 10, 10, 12, 10, 12, 8, 8, 7000], [7, 2, 9000, 0, 150, 180, 210, 10, 10, 12, 10, 12, 8, 8, 7000], [7, 3, 9000, 0, 150, 180, 210, 12, 10, 12, 10, 12, 8, 8, 7000], [7, 4, 9000, 0, 150, 180, 210, 12, 12, 12, 10, 12, 8, 8, 7000], [7, 5, 9000, 0, 150, 210, 210, 12, 12, 12, 10, 12, 8, 8, 7000], [7, 6, 9000, 0, 150, 210, 210, 12, 12, 12, 10, 12, 8, 10, 7000], [7, 7, 9000, 0, 150, 210, 210, 12, 12, 12, 10, 12, 10, 10, 7000], [7, 8, 9000, 0, 150, 210, 210, 12, 12, 12, 12, 12, 10, 10, 7000], [7, 9, 9000, 0, 150, 210, 210, 12, 12, 14, 12, 12, 10, 10, 7000], [8, 1, 12000, 0, 150, 210, 210, 12, 12, 14, 12, 12, 10, 10, 8000], [8, 2, 12000, 0, 180, 210, 210, 12, 12, 14, 12, 12, 10, 10, 8000], [8, 3, 12000, 0, 180, 210, 210, 12, 12, 14, 12, 12, 10, 12, 8000], [8, 4, 12000, 0, 180, 210, 240, 12, 12, 14, 12, 12, 10, 12, 8000], [8, 5, 12000, 0, 180, 210, 240, 14, 12, 14, 12, 12, 10, 12, 8000], [8, 6, 12000, 0, 180, 210, 240, 14, 14, 14, 12, 12, 10, 12, 8000], [8, 7, 12000, 0, 180, 210, 240, 14, 14, 14, 14, 12, 10, 12, 8000], [8, 8, 12000, 0, 180, 210, 240, 14, 14, 14, 14, 12, 12, 12, 8000], [8, 9, 12000, 0, 180, 240, 240, 14, 14, 14, 14, 12, 12, 12, 8000], [9, 1, 12000, 0, 180, 240, 240, 14, 14, 14, 16, 12, 12, 12, 9000], [9, 2, 12000, 0, 180, 240, 240, 16, 14, 14, 16, 12, 12, 12, 9000], [9, 3, 12000, 0, 180, 240, 240, 16, 16, 14, 16, 12, 12, 12, 9000], [9, 4, 12000, 0, 180, 240, 240, 16, 16, 16, 16, 12, 12, 12, 9000], [9, 5, 15000, 0, 180, 240, 240, 16, 16, 16, 16, 12, 12, 12, 9000], [9, 6, 15000, 0, 180, 240, 240, 16, 16, 16, 16, 14, 12, 12, 9000], [9, 7, 15000, 0, 180, 240, 240, 16, 16, 16, 16, 14, 12, 14, 9000], [9, 8, 15000, 0, 180, 240, 240, 16, 16, 16, 16, 14, 14, 14, 9000], [9, 9, 15000, 0, 210, 240, 240, 16, 16, 16, 16, 14, 14, 14, 9000], [10, 1, 15000, 0, 210, 240, 240, 16, 18, 16, 16, 14, 14, 14, 10000], [10, 2, 15000, 0, 210, 240, 240, 16, 18, 18, 16, 14, 14, 14, 10000], [10, 3, 18000, 0, 210, 240, 240, 16, 18, 18, 16, 14, 14, 14, 10000], [10, 4, 18000, 0, 210, 240, 240, 18, 18, 18, 16, 14, 14, 14, 10000], [10, 5, 18000, 0, 210, 240, 240, 18, 18, 18, 18, 14, 14, 14, 10000], [10, 6, 18000, 0, 240, 240, 240, 18, 18, 18, 18, 14, 14, 14, 10000], [10, 7, 18000, 0, 240, 240, 240, 18, 18, 18, 18, 16, 14, 14, 10000], [10, 8, 18000, 0, 240, 240, 240, 18, 18, 18, 18, 16, 14, 16, 10000], [10, 9, 18000, 0, 240, 240, 240, 18, 18, 18, 18, 16, 16, 16, 10000], [11, 1, 21000, 0, 240, 240, 240, 18, 18, 18, 18, 16, 16, 16, 11000], [11, 2, 21000, 0, 270, 240, 240, 18, 18, 18, 18, 16, 16, 16, 11000], [11, 3, 21000, 0, 270, 240, 240, 18, 18, 18, 18, 18, 16, 16, 11000], [11, 4, 21000, 0, 270, 240, 240, 18, 18, 18, 18, 18, 16, 18, 11000], [11, 5, 21000, 0, 270, 270, 240, 18, 18, 18, 18, 18, 16, 18, 11000], [11, 6, 21000, 0, 270, 270, 270, 18, 18, 18, 18, 18, 16, 18, 11000], [11, 7, 21000, 0, 270, 270, 270, 20, 18, 18, 18, 18, 16, 18, 11000], [11, 8, 21000, 0, 270, 270, 270, 20, 20, 18, 18, 18, 16, 18, 11000], [11, 9, 21000, 0, 270, 270, 270, 20, 20, 18, 18, 18, 18, 18, 11000], [12, 1, 21000, 0, 270, 300, 270, 20, 20, 18, 18, 18, 18, 18, 12000], [12, 2, 21000, 0, 270, 300, 270, 20, 20, 20, 18, 18, 18, 18, 12000], [12, 3, 21000, 0, 270, 300, 270, 20, 20, 20, 18, 18, 18, 20, 12000], [12, 4, 21000, 0, 270, 300, 300, 20, 20, 20, 18, 18, 18, 20, 12000], [12, 5, 21000, 0, 270, 300, 300, 20, 20, 20, 18, 20, 18, 20, 12000], [12, 6, 21000, 0, 300, 300, 300, 20, 20, 20, 18, 20, 18, 20, 12000], [12, 7, 24000, 0, 300, 300, 300, 20, 20, 20, 18, 20, 18, 20, 12000], [12, 8, 24000, 0, 300, 300, 300, 20, 20, 20, 20, 20, 18, 20, 12000], [12, 9, 24000, 0, 300, 300, 300, 20, 20, 20, 20, 20, 20, 20, 12000]];
        private static var StudyStuntType:Object = {1:["火", 39, "天火燎原", "TianHuoLiaoYuan", "绝技攻击+1000，施放绝技后剩余20气势"], 2:["土", 51, "陨石裂地", "YunShiLieDi", "绝技攻击+1500，施放绝技后剩余25气势"], 3:["金", 61, "千钧怒击", "QianJunNuJi", "绝技攻击+2000，施放绝技后剩余30气势"], 4:["水", 71, "水幕天华", "ShuiMuTianHua", "绝技攻击+2500，施放绝技后剩余35气势"], 5:["木", 81, "叶舞飞刃", "YeWuFeiRen", "绝技攻击+3000，施放绝技后剩余40气势"], 6:["风", 91, "风卷残云", "FengJuanCanYun", "绝技攻击+4000，施放绝技后剩余45气势"], 7:["冰", 101, "绝对零度", "JueDuiLingDu", "绝技攻击+5000，施放绝技后剩余50气势"], 8:["雷", 111, "雷霆一击", "LeiTingYiJi", "绝技攻击+6000，施放绝技后剩余55气势"], 9:["暗", 121, "魔影黯灭", "MoYingAnMie", "绝技攻击+7000，施放绝技后剩余60气势"], 10:["光", 131, "紫电神光", "ZiDianShenGuang", "绝技攻击+8000，施放绝技后剩余65气势"], 11:["时间", 141, "刹那芳华", "ChaNaFangHua", "绝技攻击+9000，施放绝技后剩余70气势，概率横向攻击"], 12:["空间", 151, "混沌之力", "HunDunZhiLi", "绝技攻击+10000，施放绝技后剩余75气势，概率横向攻击、晕敌1回合"]};

        public function StudyStuntType()
        {
            return;
        }// end function

        public static function getHealthAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 2);
        }// end function

        public static function getAttackAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 3);
        }// end function

        public static function getStengthAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 4);
        }// end function

        public static function getAgileAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 5);
        }// end function

        public static function getIntellectAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 6);
        }// end function

        public static function getHitAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 7);
        }// end function

        public static function getCriticalAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 8);
        }// end function

        public static function getDodgeAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 9);
        }// end function

        public static function getBlockAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 10);
        }// end function

        public static function getBreakCriticalAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 11);
        }// end function

        public static function getKillAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 12);
        }// end function

        public static function getBreakBlockAdditional(param1:int, param2:int) : int
        {
            return getStudyStuntValue(param1, param2, 13);
        }// end function

        public static function getNeedAura(param1:int, param2:int) : int
        {
            var _loc_3:Array = null;
            for each (_loc_3 in StudyStunt)
            {
                
                if (_loc_3[0] == param1 && _loc_3[1] == param2)
                {
                    return _loc_3[14];
                }
            }
            return 0;
        }// end function

        private static function getStudyStuntValue(param1:int, param2:int, param3:int) : int
        {
            var _loc_6:Array = null;
            var _loc_7:Array = null;
            var _loc_4:int = 0;
            var _loc_5:int = 0;
            while (_loc_5 < StudyStunt.length)
            {
                
                _loc_6 = StudyStunt[_loc_5] as Array;
                if (_loc_6[0] == param1 && _loc_6[1] == param2)
                {
                    _loc_4 = _loc_6[param3];
                    if (_loc_5 > 0)
                    {
                        _loc_7 = StudyStunt[(_loc_5 - 1)] as Array;
                        _loc_4 = _loc_4 - _loc_7[param3];
                    }
                    return _loc_4;
                }
                _loc_5++;
            }
            return _loc_4;
        }// end function

        public static function getElement(param1:int) : String
        {
            return StudyStuntType[param1] ? (StudyStuntType[param1][0]) : ("");
        }// end function

        public static function getLevel(param1:int) : int
        {
            return StudyStuntType[param1] ? (StudyStuntType[param1][1]) : (0);
        }// end function

        public static function getName(param1:int) : String
        {
            return StudyStuntType[param1] ? (StudyStuntType[param1][2]) : ("");
        }// end function

        public static function getSign(param1:int) : String
        {
            return StudyStuntType[param1] ? (StudyStuntType[param1][3]) : ("");
        }// end function

        public static function getDescription(param1:int) : String
        {
            return StudyStuntType[param1] ? (StudyStuntType[param1][4]) : ("");
        }// end function

    }
}
